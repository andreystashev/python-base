# -*- coding: utf-8 -*-

import simple_draw as sd

# На основе кода из lesson_004/05_snowfall.py
# сделать модуль snowfall.py в котором реализовать следующие функции
#  создать_снежинки(N) - создает N снежинок
#  нарисовать_снежинки_цветом(color) - отрисовывает все снежинки цветом color
#  сдвинуть_снежинки() - сдвигает снежинки на один шаг
#  номера_достигших_низа_экрана() - выдает список номеров снежинок, которые вышли за границу экрана
#  удалить_снежинки(номера) - удаляет снежинки с номерами из списка
# снежинки хранить в глобальных переменных модуля snowfall
#
# В текущем модуле реализовать главный цикл падения снежинок,
# обращаясь ТОЛЬКО к функциям модуля snowfall

# создать_снежинки(N)

from snowfall import (snow_color, snow_fall, get_fallen, snow_del, res, return_snow)

#
# snow_num(x=10)


while True:
    snow_color(color=sd.background_color)
    snow_fall()
    snow_color(color=sd.COLOR_YELLOW)
    get_fallen()
    snow_del()
    return_snow()
    sd.sleep(0.1)
    if sd.user_want_exit():
        break

sd.pause()
#  не пойму, как сделать функцию по созданию снежинок. Если в этой функции пытаюсь сделать переменную N, то другие
#  функции ее не видят. Если в функцию добавить списки с координатами, то их также не видят другие функции в том модуле,
#
#  Через глобальную переменную. Передали в функцию создать_снежинки количество снежинок, а она уже записала
#  в глобальную переменную это количество. Тогда остальные функции будут получать это значение из глобальной переменной.
#  Сами списки с координатами при этом тоже будут глобальными переменными.

#  которые берут из них значение.
#  И вопрос по дополнительным функциям с подсчетом и удалением упавших снежинок. У меня в коде они вылетают за край экрана
#  и их координаты смещаются, а не удаляются. Мне нужно эти функции реализовывать?
#
#  Да нужно. Весь алгоритм нужно разделить именно на атомарные операции - создать, нарисовать, сдвинуть, удалить -
#  как в задании указано. То есть мы делаем подобие API, когда пользователь имеет "кирпичики" из которых он может
#  построить программу, как ему это будет нужно.
